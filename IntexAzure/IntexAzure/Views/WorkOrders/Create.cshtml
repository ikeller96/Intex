@model IntexAzure.Models.WorkOrders

@{
    ViewBag.Title = "Create";
}

<ul class="breadcrumb">
    <li><a href="@Url.Action("Index", "Customers")">Customers</a></li>
    <li>Work Orders</li>

</ul>
<h2>New Work Order</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrderDueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderRushed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderRushed, new List<SelectListItem>
{
                   new SelectListItem() {Text="Yes", Value="Yes"},
                   new SelectListItem() { Text="No", Value="No"}, },
               "-- Select One --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderRushed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderStatus, new List<SelectListItem>
{
                   new SelectListItem() { Text="In Progress", Value="In Progress"},
                   new SelectListItem() { Text="Completed", Value="Completed"},
                   new SelectListItem() { Text="BackLog", Value="BackLog"},},
               "-- Order Status --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OrderDiscounts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderDiscounts, new List<SelectListItem>
{
                   new SelectListItem() {Text="None", Value="None"},
                   new SelectListItem() { Text="Bronze", Value="Bronze"},
                   new SelectListItem() { Text="Gold", Value="Gold"},
                   new SelectListItem() { Text="Platinum", Value="Platinum"},},
               "-- Select One --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderDiscounts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustID, "CustID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
